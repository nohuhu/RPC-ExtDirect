=pod

=head1 NAME

RPC::ExtDirect::Event - Asynchronous server-to-client events

=head1 SYNOPSIS
 
  use RPC::ExtDirect;
  use RPC::ExtDirect::Event;
 
  sub foo : ExtDirect( pollHandler ) {
     my ($class) = @_;
 
     # Do something good, collect results in $good_data
     my $good_data = { ... };
 
     # Do something bad, collect results in $bad_data
     my $bad_data = [ ... ];
 
     # Return the data
     return (
                 RPC::ExtDirect::Event->new('good', $good_data),
                 RPC::ExtDirect::Event->new('bad',  $bad_data ),
            );
 }

=head1 DESCRIPTION

This module implements L<Event|RPC::ExtDirect::Intro/Event> object that is used
to send asynchronous events from server to client, without having to request
them from the client explicitly.

Data can be anything that is serializable to JSON. No checks are made and it
is assumed that client side can understand the data format used with
Events.

Note that by default L<JSON> will blow up if you try to feed it a blessed object
as data payload, and for very good reason: it is not obvious how to serialize
a self-contained object. To avoid this, set a global Config option
L<json_options|RPC::ExtDirect::Config/json_options> to include C<allow_blessed>
flag:

    my $config = RPC::ExtDirect::Config->new(
        json_options => {
            allow_blessed => 1,
        },
    );

=head1 METHODS

=over 4

=item new($name, $data)

Creates a new Event object with event $name and some $data. Can also be passed
the arguments with a hashref, or a hash:

    my $event1 = RPC::ExtDirect::Event->new( 'foo', 'bar' );
    my $event2 = RPC::ExtDirect::Event->new({
        name => 'foo',
        data => 'bar',
    });
    my $event3 = RPC::ExtDirect::Event->new(
        name => 'foo',
        data => 'bar'
    );

This makes it easier to extend Event objects in a Moose(ish) environment, etc.

=item run()

Not intended to be called directly, provided for duck typing compatibility with
Exception and Request objects.

=item result()

Returns Event hashref in format supported by Ext.Direct client stack. Not
intended to be called directly.

=back

=cut
